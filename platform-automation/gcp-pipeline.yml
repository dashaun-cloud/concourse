---
resource_types:
  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: latest
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final
resources:
  - name: platform-automation
    type: pivnet
    source:
      product_slug: platform-automation
      api_token: ((pivnet_token))
  - name: controlplane-pipelines
    type: git
    source:
      branch: master
      uri: git@github.com:dashaun-cloud/controlplane-pipelines.git
      private_key: ((git_ssh_key))
  - name: terraform
    type: terraform
    source:
      env_name: ((env_name))
      backend_type: gcs
      backend_config:
        bucket: terraform-state-dashaun-cloud
        prefix: ((env_name))
      delete_on_failure: true
      vars:
        project: ((project))
        region: ((region))
        service_account_key: ((service_account_key))
        platform-automation-bucket: ((platform-automation-bucket))

jobs:
  - name: terraform-plan
    plan:
      - get: controlplane-pipelines
        trigger: false
      - put: terraform
        params:
          env_name: ((env_name))
          plan_only: true
          terraform_source: controlplane-pipelines/platform-automation/gcp/
  - name: terraform-apply
    plan:
      - get: controlplane-pipelines
        trigger: false
      - put: terraform
        params:
          env_name: ((env_name))
          terraform_source: controlplane-pipelines/platform-automation/gcp/
  - name: terraform-destroy
    plan:
      - get: controlplane-pipelines
        trigger: false
      - put: terraform
        get_params:
          action: destroy
        params:
          action: destroy
          env_name: ((env_name))
          terraform_source: controlplane-pipelines/platform-automation/gcp
  - name: update-image-and-task
    plan:
      - get: platform-automation-image
        resource: platform-automation
        params:
          globs: ["*image*.tgz"]
          unpack: true
      - get: platform-automation-tasks
        resource: platform-automation
        params:
          globs: ["*tasks*.zip"]
          unpack: true
      - task: test
        image: platform-automation-image
        file: platform-automation-tasks/tasks/test.yml